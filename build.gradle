buildscript {
	ext {
		kotlinVersion = '1.1.4-3'
		springBootVersion = '1.5.7.RELEASE'
	}
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath 'com.bmuschko:gradle-cargo-plugin:2.2.3'
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'
apply plugin: 'com.bmuschko.cargo'

group = 'lt.markmerkk'
version = '0.0.6'

sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
	kotlinOptions.jvmTarget = "1.8"
}

repositories {
	mavenCentral()
}


dependencies {
    // Spring
	compile("org.springframework.boot:spring-boot-starter")
	compile("org.springframework.boot:spring-boot-starter-web")
	compile("org.springframework.boot:spring-boot-starter-thymeleaf")

    // dev tools
	compile("org.springframework.boot:spring-boot-devtools")
	compile("org.springframework:springloaded:1.2.8.RELEASE")

	// Other
	compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
	compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
	compile("com.vladsch.flexmark:flexmark-all:0.27.0")
	compile("commons-io:commons-io:2.5")

    // *******
	// Testing
    // *******
	testCompile("org.springframework.boot:spring-boot-starter-test")
	testCompile("org.springframework.boot:spring-boot-test")
	testCompile("org.mockito:mockito-core:2.8.9")
	testCompile "org.jetbrains.kotlin:kotlin-test-junit:${kotlinVersion}"
	testCompile "com.nhaarman:mockito-kotlin:1.5.0"
}

war {
	baseName = 'j-trainer'
}

bootRun {
	addResources = true
}

bootRepackage {
	mainClass = 'lt.markmerkk.jtrainer.JTrainerApplication'
}

cargo {
	Properties p = new Properties()
	p.load(new FileInputStream(rootProject.file('sign.properties')))

	containerId = 'tomcat8x'
	port = 8080

	deployable {
		context = 'j-trainer'
	}

	remote {
		hostname = p.host
		username = p.user
		password = p.pass
	}

}
